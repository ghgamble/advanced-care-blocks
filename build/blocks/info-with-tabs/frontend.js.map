{"version":3,"file":"blocks/info-with-tabs/frontend.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMC,MAAM,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,sBAAsB,CAAC;EAEhED,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAK;IACxB,MAAMC,MAAM,GAAGD,KAAK,CAACF,gBAAgB,CAAC,uBAAuB,CAAC;;IAE9D;IACA,IAAI,CAACG,MAAM,CAACC,MAAM,EAAE;;IAEpB;IACA,MAAMC,YAAY,GAAGR,QAAQ,CAACS,aAAa,CAAC,KAAK,CAAC;IAClDD,YAAY,CAACE,SAAS,GAAG,0BAA0B;IAEnDJ,MAAM,CAACF,OAAO,CAAC,CAACO,KAAK,EAAEC,KAAK,KAAK;MAC/B,MAAMC,GAAG,GAAGb,QAAQ,CAACS,aAAa,CAAC,KAAK,CAAC;MACzCI,GAAG,CAACH,SAAS,GAAG,KAAK;MACrBG,GAAG,CAACC,OAAO,CAACC,QAAQ,GAAGH,KAAK;;MAE5B;MACA,MAAMI,KAAK,GAAGL,KAAK,CAACG,OAAO,CAACE,KAAK,IAAI,OAAOJ,KAAK,GAAG,CAAC,EAAE;MACvDC,GAAG,CAACI,SAAS,GAAG,SAASD,KAAK,SAAS;MAEvCH,GAAG,CAACZ,gBAAgB,CAAC,OAAO,EAAE,MAAM;QAClCI,KAAK,CAACF,gBAAgB,CAAC,MAAM,CAAC,CAACC,OAAO,CAAEc,CAAC,IAAKA,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3Ef,KAAK,CAACF,gBAAgB,CAAC,uBAAuB,CAAC,CAACC,OAAO,CAAEiB,CAAC,IAAKA,CAAC,CAACF,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE5FP,GAAG,CAACM,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;QAC3BX,KAAK,CAACQ,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;MAC/B,CAAC,CAAC;MAEF,IAAIV,KAAK,KAAK,CAAC,EAAE;QACfC,GAAG,CAACM,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;QAC3BX,KAAK,CAACQ,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;MAC/B;MAEAd,YAAY,CAACe,WAAW,CAACV,GAAG,CAAC;IAC/B,CAAC,CAAC;;IAEF;IACA,MAAMW,UAAU,GAAGlB,MAAM,CAAC,CAAC,CAAC;IAC5BD,KAAK,CAACoB,YAAY,CAACjB,YAAY,EAAEgB,UAAU,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC,C","sources":["webpack://advanced-care-blocks/./src/blocks/info-with-tabs/frontend.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const blocks = document.querySelectorAll('.gradient-tabs-block');\n\n  blocks.forEach((block) => {\n    const panels = block.querySelectorAll('.info-tab-panel-block');\n\n    // Skip if no panels\n    if (!panels.length) return;\n\n    // Create tab container\n    const tabContainer = document.createElement('div');\n    tabContainer.className = 'tabs-container alignwide';\n\n    panels.forEach((panel, index) => {\n      const tab = document.createElement('div');\n      tab.className = 'tab';\n      tab.dataset.tabIndex = index;\n\n      // Pull label from data-label attribute or fallback\n      const label = panel.dataset.label || `Tab ${index + 1}`;\n      tab.innerHTML = `<span>${label}</span>`;\n\n      tab.addEventListener('click', () => {\n        block.querySelectorAll('.tab').forEach((t) => t.classList.remove('active'));\n        block.querySelectorAll('.info-tab-panel-block').forEach((p) => p.classList.remove('active'));\n\n        tab.classList.add('active');\n        panel.classList.add('active');\n      });\n\n      if (index === 0) {\n        tab.classList.add('active');\n        panel.classList.add('active');\n      }\n\n      tabContainer.appendChild(tab);\n    });\n\n    // Insert tabs before first panel\n    const firstPanel = panels[0];\n    block.insertBefore(tabContainer, firstPanel);\n  });\n});\n"],"names":["document","addEventListener","blocks","querySelectorAll","forEach","block","panels","length","tabContainer","createElement","className","panel","index","tab","dataset","tabIndex","label","innerHTML","t","classList","remove","p","add","appendChild","firstPanel","insertBefore"],"sourceRoot":""}