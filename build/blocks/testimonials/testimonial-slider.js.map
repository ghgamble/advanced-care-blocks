{"version":3,"file":"blocks/testimonials/testimonial-slider.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD,MAAMC,OAAO,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,qBAAqB,CAAC;EAEhED,OAAO,CAACE,OAAO,CAAEC,MAAM,IAAK;IAC1B,MAAMC,MAAM,GAAGD,MAAM,CAACE,aAAa,CAAC,SAAS,CAAC;IAC9C,MAAMC,YAAY,GAAGH,MAAM,CAACF,gBAAgB,CAAC,cAAc,CAAC;IAC5D,MAAMM,IAAI,GAAGJ,MAAM,CAACF,gBAAgB,CAAC,MAAM,CAAC;IAC5C,MAAMO,OAAO,GAAGL,MAAM,CAACE,aAAa,CAAC,OAAO,CAAC;IAC7C,MAAMI,OAAO,GAAGN,MAAM,CAACE,aAAa,CAAC,OAAO,CAAC;IAE7C,IAAIK,YAAY,GAAG,CAAC;IAEpB,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvBJ,IAAI,CAACL,OAAO,CAAC,CAACU,GAAG,EAAEC,CAAC,KAAK;QACvBD,GAAG,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ,EAAEF,CAAC,KAAKH,YAAY,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC;IAED,MAAMM,aAAa,GAAIC,KAAK,IAAK;MAC/B,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAIX,YAAY,CAACY,MAAM,EAAE;MAC/C,MAAMC,MAAM,GAAGb,YAAY,CAACW,KAAK,CAAC,CAACG,UAAU;MAC7ChB,MAAM,CAACiB,QAAQ,CAAC;QAAEC,IAAI,EAAEH,MAAM;QAAEI,QAAQ,EAAE;MAAS,CAAC,CAAC;MACrDb,YAAY,GAAGO,KAAK;MACpBN,UAAU,CAAC,CAAC;IACd,CAAC;IAEDH,OAAO,EAAET,gBAAgB,CAAC,OAAO,EAAE,MAAMiB,aAAa,CAACN,YAAY,GAAG,CAAC,CAAC,CAAC;IACzED,OAAO,EAAEV,gBAAgB,CAAC,OAAO,EAAE,MAAMiB,aAAa,CAACN,YAAY,GAAG,CAAC,CAAC,CAAC;IAEzEH,IAAI,CAACL,OAAO,CAAC,CAACU,GAAG,EAAEC,CAAC,KAClBD,GAAG,CAACb,gBAAgB,CAAC,OAAO,EAAE,MAAMiB,aAAa,CAACH,CAAC,CAAC,CACtD,CAAC;;IAED;IACAT,MAAM,CAACL,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACtC,MAAMyB,UAAU,GAAGpB,MAAM,CAACoB,UAAU;MACpC,IAAIC,YAAY,GAAG,CAAC;MACpB,IAAIC,eAAe,GAAGC,QAAQ;MAC9BrB,YAAY,CAACJ,OAAO,CAAC,CAAC0B,KAAK,EAAEf,CAAC,KAAK;QACjC,MAAMgB,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,CAACR,UAAU,GAAGI,UAAU,CAAC;QACpD,IAAIK,IAAI,GAAGH,eAAe,EAAE;UAC1BD,YAAY,GAAGZ,CAAC;UAChBa,eAAe,GAAGG,IAAI;QACxB;MACF,CAAC,CAAC;MACF,IAAIJ,YAAY,KAAKf,YAAY,EAAE;QACjCA,YAAY,GAAGe,YAAY;QAC3Bd,UAAU,CAAC,CAAC;MACd;IACF,CAAC,CAAC;IAEFA,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC;AACN,CAAC,CAAC,C","sources":["webpack://advanced-care-blocks/./src/blocks/testimonials/testimonial-slider.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const sliders = document.querySelectorAll('.testimonial-slider');\n  \n    sliders.forEach((slider) => {\n      const slides = slider.querySelector('.slides');\n      const testimonials = slider.querySelectorAll('.testimonial');\n      const dots = slider.querySelectorAll('.dot');\n      const prevBtn = slider.querySelector('.prev');\n      const nextBtn = slider.querySelector('.next');\n  \n      let currentIndex = 0;\n  \n      const updateDots = () => {\n        dots.forEach((dot, i) => {\n          dot.classList.toggle('active', i === currentIndex);\n        });\n      };\n  \n      const scrollToIndex = (index) => {\n        if (index < 0 || index >= testimonials.length) return;\n        const offset = testimonials[index].offsetLeft;\n        slides.scrollTo({ left: offset, behavior: 'smooth' });\n        currentIndex = index;\n        updateDots();\n      };\n  \n      prevBtn?.addEventListener('click', () => scrollToIndex(currentIndex - 1));\n      nextBtn?.addEventListener('click', () => scrollToIndex(currentIndex + 1));\n  \n      dots.forEach((dot, i) =>\n        dot.addEventListener('click', () => scrollToIndex(i))\n      );\n  \n      // Optional scroll sync (e.g. for touch gestures)\n      slides.addEventListener('scroll', () => {\n        const scrollLeft = slides.scrollLeft;\n        let closestIndex = 0;\n        let closestDistance = Infinity;\n        testimonials.forEach((slide, i) => {\n          const dist = Math.abs(slide.offsetLeft - scrollLeft);\n          if (dist < closestDistance) {\n            closestIndex = i;\n            closestDistance = dist;\n          }\n        });\n        if (closestIndex !== currentIndex) {\n          currentIndex = closestIndex;\n          updateDots();\n        }\n      });\n  \n      updateDots(); // Init\n    });\n});\n  "],"names":["document","addEventListener","sliders","querySelectorAll","forEach","slider","slides","querySelector","testimonials","dots","prevBtn","nextBtn","currentIndex","updateDots","dot","i","classList","toggle","scrollToIndex","index","length","offset","offsetLeft","scrollTo","left","behavior","scrollLeft","closestIndex","closestDistance","Infinity","slide","dist","Math","abs"],"sourceRoot":""}